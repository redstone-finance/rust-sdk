[package]
authors = ["RedStone <https://redstone.finance>"]
description = "A Rust implementation of deserializing&decrypting RedStone payload"
edition = "2021"
name = "redstone"
version = "3.0.0-pre3"

[features]
default = ["default-crypto", "std"]

std = ["getrandom/std", "k256?/std", "sha3?/std"]

# default crypto implementations
default-crypto = ["k256", "sha3"]

# An extension for Radix network
radix = ["scrypto"]

# An extension setting usage on casper network.
casper = ["casper-types", "default-crypto"]
casper-test = ["casper", "casper-contract/test-support"]

# An extension for debug-printing of messages.
print_debug = []

# A variant of decrypting the message-signers using secp256k1 library. Cheaper in runtime.
crypto_secp256k1 = [
    "secp256k1/alloc",
    "secp256k1/lowmemory",
    "secp256k1/recovery",
]

# A variant of decrypting the message-signers using k256 library. Cheaper during contract deployment.
crypto_k256 = ["k256/alloc", "k256/ecdsa", "k256/sha256"]

# A variant of decrypting the message-signers using Solana library.
solana = ["anchor-lang"]

# A variant of decrypting the message-signers using Soroban library.
soroban = ["soroban-sdk"]

# export function for benchmarking
bench = []

[dependencies]
anchor-lang = { version = "0.31.1", optional = true, default-features = false }
casper-contract = { version = "^4.0.0", default-features = false, features = [
], optional = true }
casper-types = { version = "^4.0.2", default-features = false, features = [
], optional = true }
hex-literal = { version = "0.4.1" }
k256 = { version = "^0.13.4", default-features = false, features = [
    "ecdsa",
], optional = true }
scrypto = { version = "^1.3.0", optional = true }
secp256k1 = { version = "^0.29.1", default-features = false, features = [
], optional = true }
sha3 = { version = "^0.10.8", default-features = false, features = [
    "asm",
], optional = true }
soroban-sdk = { version = "23.0.2", optional = true }
thiserror = { version = "^2.0.12", default-features = false }


[dev-dependencies]
criterion = { version = "0.5.1", default-features = false }
itertools = { version = "^0.13.0" }
rand = "0.8.5"
redstone-utils = { path = "../redstone-utils" }
samples = { path = "../samples" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
getrandom = { version = "^0.2.15", default-features = false, features = ["js"] }
wasm-bindgen-test = { version = "^0.3.45" }

[[bench]]
harness = false
name = "bench_main"

[lib]
bench = false
